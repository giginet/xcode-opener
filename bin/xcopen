#!/usr/bin/env bash

version() {
    echo "xcode-opener 0.3.0 by giginet <giginet.net@gmail.com>"
    echo "https://github.com/giginet/xcode-opener"
}

usage() {
  version
cat << EOF >&2
Xcode Opener
Open Xcode project by context

Usage:
    $(basename $0) [command] [<args>]
Commands:
    open [-v version]     Open Xcode projects by context with specific Xcode version
    list                  List all available Xcodes
    help                  Display usage
    version               Display current script version
EOF
}

_find() {
  echo $(find . -maxdepth 1 -name "$1" -print -quit) | tail -n 1
}

_parseXcodeVersion() {
  PLISTBUDDY_PATH=/usr/libexec/PlistBuddy
  XCODE_VERSION=$($PLISTBUDDY_PATH -c "print CFBundleShortVersionString" $1/Contents/version.plist)
  echo $XCODE_VERSION
}

_allXcodePaths() {
  echo $(mdfind "kMDItemCFBundleIdentifier == 'com.apple.dt.Xcode'")
}

_findXcode() {
  all_xcode_versions=$(_allXcodePaths)
  for xcode_path in $all_xcode_versions
  do
    version=$(_parseXcodeVersion $xcode_path)
    if [ $version == $1 ]; then
      echo $xcode_path
      break
    fi
  done
}

open_xcode() {
  if [ $1 == "-v" ]; then
    version=$2
  fi
  if [ -n "$version" ]; then
    xcode_path=$(_findXcode $version)
    if [ -z $xcode_path ]; then
      printf "\e[31mCould not found Xcode ${version}\e[m\n"
    fi
  else
    all_xcode_versions=$(_allXcodePaths)
    xcode_path=$(echo $all_xcode_versions | awk '{ print $1 }')
  fi
  xcode_path=${xcode_path:-"/Applications/Xcode.app"} 
  if [ -z $xcode_path ] || [ ! -e $xcode_path ]; then
    printf "\e[31mCould not found any Xcode. Please install from Mac App Store.\e[m\n"
    exit 1
  fi

  version=$(_parseXcodeVersion $xcode_path)

  echo "Using Xcode ${version} on ${xcode_path}"

  if [ -e "Package.swift" ]; then
    open -a $xcode_path ./
    exit 0
  elif [ -n "$(_find "*.xcworkspace")" ]; then
    open -a $xcode_path *.xcworkspace
    exit 0
  elif [ -n "$(_find "*.xcodeproj")" ]; then
    open -a $xcode_path *.xcodeproj
    exit 0
  else
    printf "\e[31mCould not found any Xcode projects. The current directory must contain Package.swift, *.xcworkspace or *.xcodeproj\e[m\n"
    exit 1
  fi
}

list_xcode() {
  paths=$(_allXcodePaths)
  versions=
  for path in $paths
  do
    version=$(_parseXcodeVersion $path)
    versions="${versions} ${version}"
  done
  echo $versions | sort | tr  ' ' '\n'
}

subcommand=$1
subcommand=${subcommand:-"open"}

case $subcommand in
  "-v" )
    open_xcode -v $2
    exit 0
    ;;
  "open" )
    open_xcode $2 $3
    exit 0
    ;;
  "list" )
    list_xcode
    exit 0
    ;;
  "help" )
    usage
    exit 0
    ;;
  "version" )
    version
    exit 0
    ;;
  * )
    echo "Unknown command $subcommand"
esac
